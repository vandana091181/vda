Transform: AWS::Serverless-2016-10-31
Description: Vehicle detection mlops backend
Globals:
  Api:
    Cors:
      AllowMethods: "'GET,POST,OPTIONS'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"
    Auth:
      AddDefaultAuthorizerToCorsPreflight: false
    GatewayResponses:
      DEFAULT_4XX:
        ResponseParameters:
          Headers:
            Access-Control-Allow-Origin: "'*'"
            Access-Control-Allow-Methods: "'OPTIONS,GET,PUT'"
            Access-Control-Allow-Headers: "'Content-Type,Authorization'"
      DEFAULT_5XX:
        ResponseParameters:
          Headers:
            Access-Control-Allow-Origin: "'*'"
            Access-Control-Allow-Methods: "'OPTIONS,GET,PUT'"
            Access-Control-Allow-Headers: "'Content-Type,Authorization'"
  Function:
    Runtime: python3.8
    Timeout: 30
    MemorySize: 128
Resources:
  AppMetaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/meta.get_meta
      Description: A function that gets app meta
      Role: '{{resolve:ssm:/vda/iam/lambdarole:1}}'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /meta
            Method: GET
      CodeUri: s3://zvissh-us-east-1/v21/a9280ab48a3de7c736d79b4fb379d786
  GetS3PresignedUrl:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/meta.get_s3_upload_ps_url
      Description: A function that gets app meta
      Role: '{{resolve:ssm:/vda/iam/lambdarole:1}}'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /s3ps
            Method: GET
      CodeUri: s3://zvissh-us-east-1/v21/a9280ab48a3de7c736d79b4fb379d786
  RunTrainModelStateMachine:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/train.execute_train_state_machine
      Description: A function that gets app meta
      Role: '{{resolve:ssm:/vda/iam/lambdarole:1}}'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /train
            Method: PUT
      CodeUri: s3://zvissh-us-east-1/v21/a9280ab48a3de7c736d79b4fb379d786
  TrainModel:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/train.train
      Description: A function that gets app meta
      Role: '{{resolve:ssm:/vda/iam/lambdarole:1}}'
      CodeUri: s3://zvissh-us-east-1/v21/a9280ab48a3de7c736d79b4fb379d786
  DetectMask:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/inference.detect_vehicle
      Description: A function that gets app meta
      Role: '{{resolve:ssm:/vda/iam/lambdarole:1}}'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /detect
            Method: GET
      CodeUri: s3://zvissh-us-east-1/v21/a9280ab48a3de7c736d79b4fb379d786
  CheckTrainStatus:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/check_status.check_train_status
      Description: A function that gets app meta
      Role: '{{resolve:ssm:/vda/iam/lambdarole:1}}'
      CodeUri: s3://zvissh-us-east-1/v21/a9280ab48a3de7c736d79b4fb379d786
  CheckDeploymentStatus:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/check_status.check_deplyment_status
      Description: A function that gets app meta
      Role: '{{resolve:ssm:/vda/iam/lambdarole:1}}'
      CodeUri: s3://zvissh-us-east-1/v21/a9280ab48a3de7c736d79b4fb379d786
  DeployModel:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/deploy.deploy
      Description: A function that gets app meta
      Role: '{{resolve:ssm:/vda/iam/lambdarole:1}}'
      CodeUri: s3://zvissh-us-east-1/v21/a9280ab48a3de7c736d79b4fb379d786
  TrainModelStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: TrainModel
      DefinitionS3Location:
        Bucket: zvissh-us-east-1
        Key: v21/e79826278961ce11ec06aefe2102bd15
      DefinitionSubstitutions:
        TrainModelArn:
          Fn::GetAtt:
          - TrainModel
          - Arn
        CheckTrainStatusArn:
          Fn::GetAtt:
          - CheckTrainStatus
          - Arn
        DeployModelArn:
          Fn::GetAtt:
          - DeployModel
          - Arn
        CheckDeploymentArn:
          Fn::GetAtt:
          - CheckDeploymentStatus
          - Arn
      RoleArn: '{{resolve:ssm:/vda/iam/sfrole:1}}'
